{"version":3,"sources":["components/Overview.js","App.js","index.js"],"names":["Overview","tasks","deleteTask","editTask","listOfTasks","map","task","index","className","contentEditable","editActivated","text","id","onClick","editTaskButton","App","state","newTask","uniqid","tasksList","addTask","bind","saveFormChange","event","this","setState","target","value","preventDefault","concat","console","log","taskId","filter","taskList","onSubmit","type","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAmBeA,MAjBf,YAAmD,IAAhCC,EAA+B,EAA/BA,MAAQC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,SAE7BC,EAAcH,EAAMI,KAAI,SAACC,EAAMC,GAAP,OAC9B,sBAA+BC,UAAU,gBAAzC,UACC,oBAAIC,gBAAiBH,EAAKI,cAA6BF,UAAU,WAAjE,oBAAiFD,EAAQ,EAAzF,aAA+FD,EAAKK,OAAtDL,EAAKM,IACnD,sBAA8BJ,UAAU,kBAAxC,UACA,wBAAQA,UAAU,SAAQK,QAAS,kBAAMV,EAASG,EAAKM,KAAvD,SAA6DN,EAAKQ,iBAClE,wBAAQN,UAAU,SAAQK,QAAS,kBAAMX,EAAWI,EAAKM,KAAzD,8BAFU,WAAWN,EAAKM,MAFjB,YAAYN,EAAKM,OAQvB,OACI,qBAAKA,GAAG,WAAR,SACKR,K,gBCsFFW,G,wDA/Fb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,CACPN,KAAM,GACND,cAAe,QACfI,eAAgB,eAChBF,GAAIM,OAENC,UAAW,IAGb,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKnB,WAAa,EAAKA,WAAWmB,KAAhB,gBAClB,EAAKlB,SAAW,EAAKA,SAASkB,KAAd,gBAfJ,E,kDAiBd,SAAeE,GACbC,KAAKC,SAAS,CACVR,QAAS,CACPN,KAAMY,EAAMG,OAAOC,MACnBf,GAAIY,KAAKR,MAAMC,QAAQL,GACvBF,cAAec,KAAKR,MAAMC,QAAQP,cAClCI,eAAgBU,KAAKR,MAAMC,QAAQH,oB,qBAK3C,SAAQS,GACNA,EAAMK,iBAC0B,KAA5BJ,KAAKR,MAAMC,QAAQN,OACvBa,KAAKC,SAAS,CACZR,QAAS,CACPN,KAAM,GACND,cAAe,QACfI,eAAgB,eAChBF,GAAIM,OAENC,UAAWK,KAAKR,MAAMG,UAAUU,OAAOL,KAAKR,MAAMC,WAEnDa,QAAQC,IAAIP,KAAKR,MAAMG,c,wBAG1B,SAAWa,GACTR,KAAKC,SAAS,CAEZN,UAAWK,KAAKR,MAAMG,UAAUc,QAAO,SAAC3B,GAAD,OAAUA,EAAKM,KAAOoB,S,sBAKjE,SAASA,GACPR,KAAKC,SAAS,CACZR,QAAS,CACPN,KAAM,GACNC,GAAIY,KAAKR,MAAMC,QAAQL,GACvBE,eAAgBU,KAAKR,MAAMC,QAAQH,gBAErCoB,SAAUV,KAAKR,MAAMG,UAAUd,KAAI,SAACC,GAClC,OAAGA,EAAKM,KAAOoB,GAAiC,UAAvB1B,EAAKI,eAC5BoB,QAAQC,IAAIzB,GACL,CACLA,EAAKI,cAAgB,OACrBJ,EAAKQ,eAAiB,oBAGfR,EAAKM,KAAOoB,GAAiC,SAAvB1B,EAAKI,cAC7B,CACLJ,EAAKI,cAAgB,QACvBJ,EAAKQ,eAAiB,gBAIfR,S,oBAKf,WACA,OACE,sBAAKE,UAAU,MAAMI,GAAG,MAAxB,UACE,oBAAIA,GAAG,QAAP,6BACD,cAAC,EAAD,CAAUX,MAAOuB,KAAKR,MAAMG,UAAWjB,WAAYsB,KAAKtB,WAAYC,SAAUqB,KAAKrB,SAAUW,eAAgBU,KAAKR,MAAMF,iBACxH,uBAAMqB,SAAUX,KAAKJ,QAArB,UACE,kCACE,oBAAIZ,UAAU,eAAd,2BACA,uBAAOI,GAAG,cAAcwB,KAAK,OAAOT,MAAQH,KAAKR,MAAMC,QAAQN,KAAM0B,SAAUb,KAAKF,oBAEpF,uBAAOd,UAAU,SAAQ4B,KAAK,SAAST,MAAM,wB,GAzFpCW,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ca2ee3ca.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Overview({tasks , deleteTask, editTask}) {\n\n    const listOfTasks = tasks.map((task, index) =>\n    <div key={'parentDiv'+task.id} className=\"taskContainer\">\n     <ul contentEditable={task.editActivated} key={task.id} className=\"taskText\">{`(${index + 1}) ${task.text}`}</ul>\n     <div key={'childDiv'+task.id} className=\"buttonContainer\">\n     <button className='button'onClick={() => editTask(task.id)}>{task.editTaskButton}</button>\n     <button className='button'onClick={() => deleteTask(task.id)}>Eliminar Tarea</button>\n     </div>\n     </div>\n    )\n        return (\n            <div id=\"taskList\">\n                {listOfTasks}\n            </div>\n        )\n}\nexport default Overview\n","import React from 'react';\nimport Overview from './components/Overview'\nimport uniqid from \"uniqid\";\nimport './index.css'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      newTask: {\n        text: '',\n        editActivated: 'false',\n        editTaskButton: 'Editar Tarea',\n        id: uniqid(),\n      },\n      tasksList: [],\n    }\n\n    this.addTask = this.addTask.bind(this);\n    this.saveFormChange = this.saveFormChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n  }\n  saveFormChange(event) {\n    this.setState({\n        newTask: {\n          text: event.target.value,\n          id: this.state.newTask.id,\n          editActivated: this.state.newTask.editActivated,\n          editTaskButton: this.state.newTask.editTaskButton,\n        },\n    })\n    }\n  \n  addTask(event) {\n    event.preventDefault()\n    if (this.state.newTask.text !== '') {\n    this.setState({\n      newTask: {\n        text: '',\n        editActivated: 'false',\n        editTaskButton: 'Editar Tarea',\n        id: uniqid(),\n      },\n      tasksList: this.state.tasksList.concat(this.state.newTask),\n    \n  });console.log(this.state.tasksList)}\n  }\n  // en el boton de overview, se pasa como parametro la id correspondiente a cada task\n  deleteTask(taskId){\n    this.setState({\n      // si se toca ese boton, se borra task que coincida con el id pasado como parametro\n      tasksList: this.state.tasksList.filter((task) => task.id !== taskId)\n    })\n  }\n\n\n  editTask(taskId){\n    this.setState({\n      newTask: {\n        text: '',\n        id: this.state.newTask.id,\n        editTaskButton: this.state.newTask.editTaskButton,\n      },\n      taskList: this.state.tasksList.map((task) => {\n        if(task.id === taskId && task.editActivated === 'false'){\n          console.log(task);\n          return [\n            task.editActivated = 'true',\n            task.editTaskButton = 'Guardar Cambios'\n          ]\n          \n        } else if (task.id === taskId && task.editActivated === 'true'){\n          return [ \n            task.editActivated = 'false',\n          task.editTaskButton = 'Editar Tarea'\n        ]\n        }\n        else {\n          return task;\n        }\n      }),\n    })\n  }\n  render() {\n  return (\n    <div className=\"App\" id=\"app\">\n      <h1 id=\"title\">Lista de Tareas</h1>\n     <Overview tasks={this.state.tasksList} deleteTask={this.deleteTask} editTask={this.editTask} editTaskButton={this.state.editTaskButton}/>\n     <form onSubmit={this.addTask}>\n       <label>\n         <h1 className=\"agregarTarea\">Agregar Tarea</h1>\n         <input id=\"addTaskForm\" type=\"text\" value ={this.state.newTask.text} onChange={this.saveFormChange}/>\n         </label>\n         <input className='button'type=\"submit\" value=\"Confirmar\" />\n     </form>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}