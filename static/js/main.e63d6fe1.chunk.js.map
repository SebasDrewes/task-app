{"version":3,"sources":["components/Overview.js","App.js","index.js"],"names":["Overview","tasks","deleteTask","editTask","editedTask","listOfTasks","map","task","index","className","text","id","onClick","App","state","newTask","uniqid","tasksList","addTask","bind","saveFormChange","event","this","setState","target","value","preventDefault","concat","taskId","filter","taskNewText","taskList","onSubmit","type","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAkBeA,MAhBf,YAA+D,IAA5CC,EAA2C,EAA3CA,MAAQC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WACvCC,EAAcJ,EAAMK,KAAI,SAACC,EAAMC,GAAP,OAC9B,sBAA+BC,UAAU,gBAAzC,UACC,oBAAkBA,UAAU,WAA5B,oBAA4CD,EAAQ,EAApD,aAA0DD,EAAKG,OAAtDH,EAAKI,IACd,sBAA8BF,UAAU,kBAAxC,UACA,wBAAQA,UAAU,SAAQG,QAAS,kBAAMT,EAASI,EAAKI,GAAIP,IAA3D,0BACA,wBAAQK,UAAU,SAAQG,QAAS,kBAAMV,EAAWK,EAAKI,KAAzD,8BAFU,WAAWJ,EAAKI,MAFjB,YAAYJ,EAAKI,OAQvB,OACI,qBAAKA,GAAG,WAAR,SACKN,K,gBCoEFQ,G,wDA5Eb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,CACPL,KAAM,GACNC,GAAIK,OAENC,UAAW,IAGb,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKjB,WAAa,EAAKA,WAAWiB,KAAhB,gBAClB,EAAKhB,SAAW,EAAKA,SAASgB,KAAd,gBAbJ,E,kDAed,SAAeE,GACbC,KAAKC,SAAS,CACVR,QAAS,CACPL,KAAMW,EAAMG,OAAOC,MACnBd,GAAIW,KAAKR,MAAMC,QAAQJ,Q,qBAK/B,SAAQU,GACNA,EAAMK,iBAC0B,KAA5BJ,KAAKR,MAAMC,QAAQL,MACvBY,KAAKC,SAAS,CACZR,QAAS,CACPL,KAAM,GACNC,GAAIK,OAENC,UAAWK,KAAKR,MAAMG,UAAUU,OAAOL,KAAKR,MAAMC,a,wBAKtD,SAAWa,GACTN,KAAKC,SAAS,CAEZN,UAAWK,KAAKR,MAAMG,UAAUY,QAAO,SAACtB,GAAD,OAAUA,EAAKI,KAAOiB,S,sBAGjE,SAASA,EAAQE,GACK,KAAhBA,GACJR,KAAKC,SAAS,CACZR,QAAS,CACPL,KAAM,GACNC,GAAIW,KAAKR,MAAMC,QAAQJ,IAEzBoB,SAAUT,KAAKR,MAAMG,UAAUX,KAAI,SAACC,GAClC,OAAGA,EAAKI,KAAOiB,EACNrB,EAAKG,KAAOoB,EAEZvB,S,oBAKf,WACA,OACE,sBAAKE,UAAU,MAAME,GAAG,MAAxB,UACE,oBAAIA,GAAG,QAAP,6BACD,cAAC,EAAD,CAAUV,MAAOqB,KAAKR,MAAMG,UAAWf,WAAYoB,KAAKpB,WAAYC,SAAUmB,KAAKnB,SAAUC,WAAYkB,KAAKR,MAAMC,QAAQL,OAC5H,uBAAMsB,SAAUV,KAAKJ,QAArB,UACE,kCACE,oBAAIT,UAAU,WAAd,oCACA,uBAAOE,GAAG,cAAcsB,KAAK,OAAOR,MAAQH,KAAKR,MAAMC,QAAQL,KAAMwB,SAAUZ,KAAKF,oBAEpF,uBAAOX,UAAU,SAAQwB,KAAK,SAASR,MAAM,wB,GAtEpCU,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e63d6fe1.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Overview({tasks , deleteTask, editTask, editedTask}) {\n    const listOfTasks = tasks.map((task, index) =>\n    <div key={'parentDiv'+task.id} className=\"taskContainer\">\n     <ul key={task.id} className=\"taskText\">{`(${index + 1}) ${task.text}`}</ul>\n     <div key={'childDiv'+task.id} className=\"buttonContainer\">\n     <button className='button'onClick={() => editTask(task.id, editedTask)}>Editar Tarea</button>\n     <button className='button'onClick={() => deleteTask(task.id)}>Eliminar Tarea</button>\n     </div>\n     </div>\n    )\n        return (\n            <div id=\"taskList\">\n                {listOfTasks}\n            </div>\n        )\n}\nexport default Overview\n","import React from 'react';\nimport Overview from './components/Overview'\nimport uniqid from \"uniqid\";\nimport './index.css'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      newTask: {\n        text: '',\n        id: uniqid()\n      },\n      tasksList: [],\n    }\n\n    this.addTask = this.addTask.bind(this);\n    this.saveFormChange = this.saveFormChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n  }\n  saveFormChange(event) {\n    this.setState({\n        newTask: {\n          text: event.target.value,\n          id: this.state.newTask.id,\n        },\n    })\n    }\n  \n  addTask(event) {\n    event.preventDefault()\n    if (this.state.newTask.text !== '') {\n    this.setState({\n      newTask: {\n        text: '',\n        id: uniqid(),\n      },\n      tasksList: this.state.tasksList.concat(this.state.newTask),\n    \n  })}\n  }\n  // en el boton de overview, se pasa como parametro la id correspondiente a cada task\n  deleteTask(taskId){\n    this.setState({\n      // si se toca ese boton, se borra task que coincida con el id pasado como parametro\n      tasksList: this.state.tasksList.filter((task) => task.id !== taskId)\n    })\n  }\n  editTask(taskId, taskNewText){\n    if (taskNewText !== '')\n    this.setState({\n      newTask: {\n        text: '',\n        id: this.state.newTask.id,\n      },\n      taskList: this.state.tasksList.map((task) => {\n        if(task.id === taskId) {\n          return task.text = taskNewText\n        } else {\n          return task;\n        }\n      })\n    })\n  }\n  render() {\n  return (\n    <div className=\"App\" id=\"app\">\n      <h1 id=\"title\">Lista de Tareas</h1>\n     <Overview tasks={this.state.tasksList} deleteTask={this.deleteTask} editTask={this.editTask} editedTask={this.state.newTask.text}/>\n     <form onSubmit={this.addTask}>\n       <label>\n         <h1 className=\"taskText\">Agregar o editar tarea</h1>\n         <input id=\"addTaskForm\" type=\"text\" value ={this.state.newTask.text} onChange={this.saveFormChange}/>\n         </label>\n         <input className='button'type=\"submit\" value=\"Confirmar\" />\n     </form>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}